import 'dart:async';

import 'package:flutter/material.dart';
import 'package:ruserapp/model/results.dart';
import 'package:ruserapp/networking/response_type.dart';
import 'package:ruserapp/repository/api_interface_repository.dart';

class UserListBloc {
  FetchRandomUserListRepository _fetchRandomUserListRepository;
  StreamController _streamController;

  StreamSink<Response<Autogenerated>> get userListLink =>
      _streamController.sink;

  Stream<Response<Autogenerated>> get userListStream =>
      _streamController.stream;

  UserListBloc() {
    _streamController = StreamController<Response<Autogenerated>>();
    _fetchRandomUserListRepository = FetchRandomUserListRepository();
    fetchRandomUser();
  }

  fetchRandomUser() async {
    userListLink.add(Response.loading('Getting random user...'));
    try {
      Autogenerated resultsList =
          await _fetchRandomUserListRepository.fetchUserList();
      userListLink.add(Response.completed(resultsList));
    } catch (e) {
      userListLink.add(Response.error(e.toString()));
      debugPrint("RANDOMUSER: " + e.toString());
    }
  }

  dispose() {
    _streamController?.close();
  }
}
