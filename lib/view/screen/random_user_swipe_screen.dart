import 'package:flutter/material.dart';

import '../../model/results.dart';

class RandomUserSwipeScreen extends StatefulWidget {
  final Autogenerated resultUser;
  final int userIndex;

  RandomUserSwipeScreen({Key key, this.userIndex, this.resultUser})
      : super(key: key);

  @override
  _RandomUserSwipeScreenState createState() => _RandomUserSwipeScreenState();
}

class _RandomUserSwipeScreenState extends State<RandomUserSwipeScreen> {
  PageController pageController;
  int currentUser = 0;

  @override
  void initState() {
    super.initState();
    currentUser = widget.userIndex;
    pageController = PageController(
        initialPage: currentUser, keepPage: false, viewportFraction: 0.5);
  }

  @override
  void dispose() {
    pageController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    var user = widget.resultUser.results[currentUser];
    return Scaffold(
        appBar: AppBar(
            leading: BackButton(color: Colors.black),
            title: Text('${user.name.first} ${user.name.last}',
                style: TextStyle(color: Colors.black87)),
            backgroundColor: Colors.grey.shade200,
            centerTitle: true),
        body: Center(
            child: Column(children: <Widget>[
          Expanded(
              flex: 10,
              child: PageView.builder(
                  physics: BouncingScrollPhysics(),
                  onPageChanged: (value) => setState(() => currentUser = value),
                  controller: pageController,
                  itemCount: widget.resultUser.results.length,
                  itemBuilder: (context, index) => builder(index))),
          Expanded(
              flex: 8,
              child: SingleChildScrollView(
                  child: Padding(
                      padding: const EdgeInsets.only(left: 60.0),
                      child: Column(children: <Widget>[
                        Padding(
                            padding: const EdgeInsets.all(8.0),
                            child: Row(children: <Widget>[
                              Icon(Icons.email),
                              SizedBox(width: 15.0),
                              Text('${user.email}')
                            ])),
                        Padding(
                            padding: const EdgeInsets.all(8.0),
                            child: Row(children: <Widget>[
                              Icon(Icons.home),
                              SizedBox(width: 15.0),
                              Text('${user.location.city}' +
                                  ", " +
                                  '${user.location.country}')
                            ])),
                        Padding(
                            padding: const EdgeInsets.all(8.0),
                            child: Row(children: <Widget>[
                              Icon(Icons.call),
                              SizedBox(width: 15.0),
                              Text('${user.phone}')
                            ])),
                        Padding(
                            padding: const EdgeInsets.all(8.0),
                            child: Row(children: <Widget>[
                              Icon(Icons.phone_android),
                              SizedBox(width: 15.0),
                              Text('${user.cell}')
                            ]))
                      ]))))
        ])));
  }

  builder(int index) {
    var user = widget.resultUser.results[index];
    return AnimatedBuilder(
        animation: pageController,
        builder: (context, child) {
          double value = 1;
          if (pageController.position.haveDimensions) {
            value = pageController.page - index;
            value = (1 - (value.abs() * .5)).clamp(0.0, 1.0);
          }
          return Center(
              child: SizedBox(
                  height: Curves.easeOut.transform(value) * 300,
                  width: Curves.easeOut.transform(value) * 250,
                  child: child));
        },
        child: Card(
            shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(18.0)),
            elevation: 10,
            margin: const EdgeInsets.all(8.0),
            child: Center(
                child: SingleChildScrollView(
                    child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: <Widget>[
                  Container(
                      width: 100.0,
                      height: 100.0,
                      decoration: BoxDecoration(
                          color: const Color(0xff7c94b6),
                          image: DecorationImage(
                              image: NetworkImage('${user.picture.large}'),
                              fit: BoxFit.cover),
                          borderRadius: BorderRadius.all(Radius.circular(50.0)),
                          border: Border.all(color: Colors.white, width: 4.0))),
                  SizedBox(height: 20.0),
                  Text('${user.login.username}',
                      style: TextStyle(
                          color: index % 2 == 0
                              ? Colors.grey.shade200
                              : Colors.black),
                      maxLines: 1)
                ]))),
            color: index % 2 == 0 ? Colors.black45 : Colors.grey.shade200));
  }
}
