import 'package:flutter/material.dart';

import '../../bloc/user_list_bloc.dart';
import '../../model/results.dart';
import '../../networking/response_type.dart';
import '../widget/exception_widget.dart';
import '../widget/loading_widget.dart';
import '../widget/user_list_widget.dart';

class RandomUserListScreen extends StatefulWidget {
  @override
  _RandomUserListScreenState createState() => _RandomUserListScreenState();
}

class _RandomUserListScreenState extends State<RandomUserListScreen> {
  UserListBloc _userListBloc;

  @override
  void initState() {
    super.initState();
    _userListBloc = UserListBloc();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
            title: Text('Random User', style: TextStyle(color: Colors.black87)),
            backgroundColor: Colors.grey.shade200,
            centerTitle: true),
        body: RefreshIndicator(
            backgroundColor: Colors.white,
            color: Colors.black,
            displacement: 100,
            onRefresh: () => _userListBloc.fetchRandomUser(),
            child: StreamBuilder<Response<Autogenerated>>(
                stream: _userListBloc.userListStream,
                builder: (context, snapshot) {
                  if (snapshot.hasData) {
                    switch (snapshot.data.status) {
                      case Status.LOADING:
                        return LoadingWidget(message: snapshot.data.message);
                        break;
                      case Status.COMPLETED:
                        return UserListWidget(userList: snapshot.data.data);
                        break;
                      case Status.ERROR:
                        return ExceptionWidget(message: snapshot.data.message);
                        break;
                    }
                  }
                  return Container();
                })));
  }

  @override
  void dispose() {
    _userListBloc.dispose();
    super.dispose();
  }
}
